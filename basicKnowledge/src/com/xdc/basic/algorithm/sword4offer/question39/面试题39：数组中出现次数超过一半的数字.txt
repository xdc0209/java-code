摘自：《剑指offer(第2版)》 >>> 面试题39：数组中出现次数超过一半的数字
摘自：https://www.nowcoder.com/practice/e8a1b01a2df14cb2b228b30ee6a92163?tpId=13&tqId=11181&tPage=2&rp=1&ru=%2Fta%2Fcoding-interviews&qru=%2Fta%2Fcoding-interviews%2Fquestion-ranking

问题描述：
数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。

解决思路一：
先对数组排序，然后找到中间的那个数字，一定就是我们要找的元素。如果使用快速排序的话，该算法的平均时间复杂度为O(nlogn)，空间复杂度为O(1)。此算法修改了原始数组。

解决思路二：
用HashMap去解决，key存放元素，value存放个数，如果个数超过一半，输出这个元素。该算法时复杂度为O(n)，空间复杂度为O(n)。

解决思路三：
采用线性时间选择，找到中位数既是要找的数。该算法时间复杂度为O(n)，空间复杂度为O(1)。此算法修改了原始数组。

解决思路四：
这里有一种时间复杂度为O(n)，空间复杂度为O(1)的算法，主要思想如下：采用阵地攻守的思想：第一个数字作为第一个士兵，守阵地，count = 1；遇到相同元素，count++；遇到不相同元素，即为敌人，同归于尽，count--；当遇到count为0的情况，又以新的i值作为守阵地的士兵，继续下去，到最后还留在阵地上的士兵，就是要找主元素。

注意：在以上算法中，除解决思路二外，需要再遍历数组统计此元素的个数是否真的大于一半，因为输入可能非法的。
