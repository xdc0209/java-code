摘自：《剑指offer(第2版)》 >>> 面试题40：最小的K个数
摘自：https://www.nowcoder.com/practice/6a296eb82cf844ca8539b57c23e6e9bf?tpId=13&tqId=11182&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking

问题描述：
输入n个整数，找出其中最小的K个数。例如输入4,5,1,6,2,7,3,8这8个数字，则最小的4个数字是1,2,3,4。

解决思路一：
先对数组排序，取前k个元素。如果使用快速排序的话，该算法的平均时间复杂度为O(nlogn)，空间复杂度为O(1)。此算法修改了原始数组。

解决思路二：
修改冒泡排序，较小值冒泡，冒泡k次后，倒序取后k个元素。该算法的平均时间复杂度为O(k*n)，空间复杂度为O(1)。此算法修改了原始数组。

解决思路三：
采用线性时间选择，找到第k小的元素，然后对前k个元素排序，再取前k个元素。该算法时间复杂度为O(n+klogk)，空间复杂度为O(1)。此算法修改了原始数组。

解决思路四：
创建一个容量为k的大顶堆，元素数组的前k个元素直接入堆，后面的元素如果比大顶堆的堆顶小，则入堆，再对堆进行排序。该算法的平均时间复杂度为O(nlogk)，空间复杂度为O(k)。

解决思路五：
使用TreeSet模拟堆，其他同“解决思路四”。
