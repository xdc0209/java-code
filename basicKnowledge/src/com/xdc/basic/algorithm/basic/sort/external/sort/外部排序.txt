摘自：https://www.cnblogs.com/LUO77/p/5838206.html

一、定义问题
       外部排序指的是大文件的排序，即待排序的记录存储在外存储器上，待排序的文件无法一次装入内存，需要在内存和外部存储器之间进行多次数据交换，以达到排序整个文件的目的。外部排序最常用的算法是多路归并排序，即将原文件分解成多个能够一次性装入内存的部分，分别把每一部分调入内存完成排序。然后，对已经排序的子文件进行多路归并排序。

二、处理过程
     （1）按可用内存的大小，把外存上含有n个记录的文件分成若干个长度为L的子文件，把这些子文件依次读入内存，并利用有效的内部排序方法对它们进行排序，再将排序后得到的有序子文件重新写入外存；
     （2）对这些有序子文件逐趟归并，使其逐渐由小到大，直至得到整个有序文件为止。

三、优化思路
    （1）置换-选择排序：最大化每个初始归并段文件的大小，减小切分后初始归并段文件的个数。参见：《数据结构(C语言版)》 11.4 置换-选择排序
    （2）最佳归并树：使用置换-选择排序后，每个初始归并段文件的大小不同，使用最佳归并树（也是哈夫曼树）进一步较少IO次数。参见：《数据结构(C语言版)》 11.5 最佳归并树
    （3）流水线：将排序过程分为，读取数据→排序数据→写数据。3条线程并行处理。所以你在将数据分解到每一个文件中的时候，确保每个文件的大小最好是所给内存的1/3。
