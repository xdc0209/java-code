一种安全度较高的AES加密算法的使用方式

一、概念
导出初始密钥的初始向量：用于导出初始秘钥。
导出初始密钥的密钥因子：用于导出初始秘钥。
初始密钥：用于加密工作密钥。
工作密钥：用于加密敏感数据(密码、个人信息等)的密钥。

二、生成
1. 导出初始密钥的初始向量的生成
使用安全随机数算法生成16字节随机数，并做一些其他随机运算（参见已实现的代码）。并写死在代码中，不再更改。

2. 导出初始密钥的密钥因子的生成
使用安全随机数算法生成16字节随机数，并以16进制形式保存在密钥因子文件中。

3. 初始密钥生成
PBKDF2算法是一个标准的密钥导出算法，可用于导出对称密钥，计算公式为：
DK  =  PBKDF2(Password, Salt, count, dkLen)
输入：
  Password：用户输入的口令或者读取的一串字符串，这里使用"密钥因子"。
  Salt  ：盐值，字符串，这里使用"初始向量"
  count ：迭代次数，正整数，默认使用"50,000"次
  dkLen ：导出密钥的字节长度，正整数，该长度需根据应用程序或密码应用模块所需要的工作密钥长度来定义，以AES128加密算法为例，密钥长度为128bit，即16字节。
输出：
  DK    ：导出的密钥，长度为dkLen个字节的字符串。

Hash函数：
优先使用HmacSHA256、HmacSHA384、HmacSHA512等强密码算法，如果是由于使用的加密库等方面的原因导致不支持相应的强密码算法，也可以使用HmacSHA1，但迭代次数（count）需定义为"100000""次。

Java示例代码：
  SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA1");

4. 工作密钥的生成
使用安全随机数算法生成16字节随机数，再使用初始秘钥加密，将结果保存在工作秘钥文件中。


三、密钥的更新
在密钥泄露、到期等原因下，需要更新秘钥。
