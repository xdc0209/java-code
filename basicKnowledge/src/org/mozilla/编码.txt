Windows自带的记事本Notepad             Notepad++            编码前缀      备注
ANSI                                   ANSI                 无前缀        ANSI是默认的编码方式。对于英文文件是ASCII编码，对于简体中文文件是GB2312编码（只针对Windows简体中文版，如果是繁体中文版会采用Big5码）。
Unicode                                UCS-2 Little Endian  FF FE         UTF-16小端序，Unicode编码指的是UCS-2编码方式，即直接用两个字节存入字符的Unicode码。这个选项用的little endian格式。
Unicode big endian                     UCS-2 Big Endian     FE FF         UTF-16大端序，Unicode big endian编码与上一个选项相对应。我在下一节会解释little endian和big endian的涵义。
UTF-8                                  UTF-8                EF BB BF
--无法保存为UTF-8无BOM                 UTF-8无BOM           无前缀


注意：Notepad中的保存为UTF-8格式是带有BOM的，但是不带BOM格式的UTF-8同样能打开，并且如果你修改保存的话，存储格式变为带BOM的UTF8了。
      Notepad++保存时不会改变文件的编码。
      Eclipse中的UTF8是不带BOM的。
      如果java程序处理Notepad中的UFT-8（即带有BOM的），需要去除前三个字节。
      在java中，class文件采用utf8的编码方式，JVM运行时采用utf16。Java的字符串是永远都是unicode的，采用的是UTF-16的编码方式。
      Java使用UTF-8编码时生成的文件是不带BOM的。

字符集和编码
ASCII是古老的编码，那个时候还不区分字符集和编码，基本可以看作合二为一的东西。
Unicode严格来说是字符集，可以有多种编码。
UTF-8是一种Unicode的编码。

注：字符集（char set）就是字符的集合，收录了一定数量的字符。每个字符有对应的ID值，叫码点（code point）。实际存储的时候，不一定是直接存储字符串的码点（比如，为了节约空间），要进行转换。这个转换规则就是编码。


=====================================================================
摘自：http://www.cppblog.com/woaidongmao/archive/2009/08/10/92795.html
string和byte[]
string其实核心是char[],然而要把byte转化成string，必须经过编码。string.length()其实就是char数组的长度，如果使用不同的编码，很可能会错分，造成散字和乱码。


=====================================================================
摘自：http://bbs.csdn.net/topics/390425775
字符与二进制之间是有对应关系的。这个转换过程叫编码，逆过程叫解码。
Java语言，字符在内存中采用的是Unicode双字节定长编码。
但是，你要是输出到文件中，就会存在一个编码转换的过程。
一般WinXP系统，简体中文版的默认编码是GB2312编码，而不是Unicode编码，
并且，你在使用FileWriter对象的时候，并没有指定具体的编码，那么默认编码就是操作系统的默认编码。
所以，文件中的字符，采用的是GB2312编码，汉字占2个字节，ASCII字符占1个字节。
